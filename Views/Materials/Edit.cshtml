@model printCostTracker.Models.Material

@{
    ViewData["Title"] = "Edit Material";
}

<h1>Edit Material</h1>

<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="CreatedAt" />
            
            <div class="form-group mb-3">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            
            <div class="form-group mb-3">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            
            <div class="form-group mb-3">
                <label asp-for="MaterialType" class="control-label">Material Type</label>
                <select asp-for="MaterialType" class="form-control">
                    <option value="0">PLA</option>
                    <option value="1">ABS</option>
                    <option value="2">PETG</option>
                    <option value="3">PC</option>
                    <option value="4">PVA</option>
                    <option value="5">TPU</option>
                    <option value="6">TPE</option>
                    <option value="7">TPEE</option>
                    <option value="8">TPEF</option>
                </select>
                <span asp-validation-for="MaterialType" class="text-danger"></span>
            </div>
            
            <div class="form-group mb-3">
                <label asp-for="Color" class="control-label"></label>
                <input asp-for="Color" class="form-control" />
                <span asp-validation-for="Color" class="text-danger"></span>
            </div>
            
            <div class="form-group mb-3">
                <label asp-for="SpoolWeight" class="control-label">Spool Weight (kg)</label>
                <input asp-for="SpoolWeight" class="form-control" type="number" step="0.001" min="0" id="spoolWeight" />
                <span asp-validation-for="SpoolWeight" class="text-danger"></span>
            </div>
            
            <div class="form-group mb-3">
                <label asp-for="CostPerSpool" class="control-label">Cost per Spool ($)</label>
                <input asp-for="CostPerSpool" class="form-control" type="number" step="0.001" min="0" id="costPerSpool" />
                <span asp-validation-for="CostPerSpool" class="text-danger"></span>
            </div>
            
            <div class="form-group mb-3">
                <label asp-for="CostPerGram" class="control-label">Cost per Gram ($)</label>
                <input asp-for="CostPerGram" class="form-control" type="number" step="0.001" min="0" id="costPerGram" readonly />
                <small class="form-text text-muted">Calculated automatically: Cost per Spool ($) รท (Spool Weight (kg) ร 1000)</small>
                <span asp-validation-for="CostPerGram" class="text-danger"></span>
            </div>
            
            <div class="form-group mb-3">
                <div class="form-check">
                    <input asp-for="IsActive" class="form-check-input" />
                    <label asp-for="IsActive" class="form-check-label">Active</label>
                </div>
            </div>
            
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        function calculateCostPerGram() {
            const spoolWeight = parseFloat(document.getElementById('spoolWeight').value) || 0;
            const costPerSpool = parseFloat(document.getElementById('costPerSpool').value) || 0;
            
            if (spoolWeight > 0 && costPerSpool > 0) {
                // Convert kg to grams and calculate cost per gram
                const costPerGram = costPerSpool / (spoolWeight * 1000);
                document.getElementById('costPerGram').value = costPerGram.toFixed(3);
            } else {
                document.getElementById('costPerGram').value = '';
            }
        }
        
        // Add event listeners to recalculate when inputs change
        document.getElementById('spoolWeight').addEventListener('input', calculateCostPerGram);
        document.getElementById('costPerSpool').addEventListener('input', calculateCostPerGram);
        
        // Calculate on page load
        document.addEventListener('DOMContentLoaded', calculateCostPerGram);
    </script>
} 